/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ADecVarListDecVariableOpt extends PListDecVariableOpt
{
    private PDecVariable _decVariable_;
    private PListDecVariableOpt2 _listDecVariableOpt2_;
    private TPointVir _pointVir_;

    public ADecVarListDecVariableOpt()
    {
        // Constructor
    }

    public ADecVarListDecVariableOpt(
        @SuppressWarnings("hiding") PDecVariable _decVariable_,
        @SuppressWarnings("hiding") PListDecVariableOpt2 _listDecVariableOpt2_,
        @SuppressWarnings("hiding") TPointVir _pointVir_)
    {
        // Constructor
        setDecVariable(_decVariable_);

        setListDecVariableOpt2(_listDecVariableOpt2_);

        setPointVir(_pointVir_);

    }

    @Override
    public Object clone()
    {
        return new ADecVarListDecVariableOpt(
            cloneNode(this._decVariable_),
            cloneNode(this._listDecVariableOpt2_),
            cloneNode(this._pointVir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecVarListDecVariableOpt(this);
    }

    public PDecVariable getDecVariable()
    {
        return this._decVariable_;
    }

    public void setDecVariable(PDecVariable node)
    {
        if(this._decVariable_ != null)
        {
            this._decVariable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decVariable_ = node;
    }

    public PListDecVariableOpt2 getListDecVariableOpt2()
    {
        return this._listDecVariableOpt2_;
    }

    public void setListDecVariableOpt2(PListDecVariableOpt2 node)
    {
        if(this._listDecVariableOpt2_ != null)
        {
            this._listDecVariableOpt2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listDecVariableOpt2_ = node;
    }

    public TPointVir getPointVir()
    {
        return this._pointVir_;
    }

    public void setPointVir(TPointVir node)
    {
        if(this._pointVir_ != null)
        {
            this._pointVir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pointVir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decVariable_)
            + toString(this._listDecVariableOpt2_)
            + toString(this._pointVir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decVariable_ == child)
        {
            this._decVariable_ = null;
            return;
        }

        if(this._listDecVariableOpt2_ == child)
        {
            this._listDecVariableOpt2_ = null;
            return;
        }

        if(this._pointVir_ == child)
        {
            this._pointVir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decVariable_ == oldChild)
        {
            setDecVariable((PDecVariable) newChild);
            return;
        }

        if(this._listDecVariableOpt2_ == oldChild)
        {
            setListDecVariableOpt2((PListDecVariableOpt2) newChild);
            return;
        }

        if(this._pointVir_ == oldChild)
        {
            setPointVir((TPointVir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
