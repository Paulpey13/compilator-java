/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AList2ListDecVariableOpt2 extends PListDecVariableOpt2
{
    private TComma _comma_;
    private PDecVariable _decVariable_;
    private PListDecVariableOpt2 _listDecVariableOpt2_;

    public AList2ListDecVariableOpt2()
    {
        // Constructor
    }

    public AList2ListDecVariableOpt2(
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PDecVariable _decVariable_,
        @SuppressWarnings("hiding") PListDecVariableOpt2 _listDecVariableOpt2_)
    {
        // Constructor
        setComma(_comma_);

        setDecVariable(_decVariable_);

        setListDecVariableOpt2(_listDecVariableOpt2_);

    }

    @Override
    public Object clone()
    {
        return new AList2ListDecVariableOpt2(
            cloneNode(this._comma_),
            cloneNode(this._decVariable_),
            cloneNode(this._listDecVariableOpt2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAList2ListDecVariableOpt2(this);
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PDecVariable getDecVariable()
    {
        return this._decVariable_;
    }

    public void setDecVariable(PDecVariable node)
    {
        if(this._decVariable_ != null)
        {
            this._decVariable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decVariable_ = node;
    }

    public PListDecVariableOpt2 getListDecVariableOpt2()
    {
        return this._listDecVariableOpt2_;
    }

    public void setListDecVariableOpt2(PListDecVariableOpt2 node)
    {
        if(this._listDecVariableOpt2_ != null)
        {
            this._listDecVariableOpt2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listDecVariableOpt2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comma_)
            + toString(this._decVariable_)
            + toString(this._listDecVariableOpt2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._decVariable_ == child)
        {
            this._decVariable_ = null;
            return;
        }

        if(this._listDecVariableOpt2_ == child)
        {
            this._listDecVariableOpt2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._decVariable_ == oldChild)
        {
            setDecVariable((PDecVariable) newChild);
            return;
        }

        if(this._listDecVariableOpt2_ == oldChild)
        {
            setListDecVariableOpt2((PListDecVariableOpt2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
